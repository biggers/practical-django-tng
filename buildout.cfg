[buildout]
extends =
    versions.cfg

extensions =
    mr.developer
    buildout.dumppickedversions

#sources = sources
sources-dir = apps
auto-checkout = *

dump-picked-versions-file = versions-new.cfg

parts =
    manage.py
    sphinx
    tools
    mkdirs
    twitter-bootstrap
    js-fworks-setup
    dj-tagging-patch

# Add additional egg download sources here
find-links = http://simple.crate.io

# !COMMENT OUT! if you want no particular egg cache-dir
#eggs-directory=${buildout:cache_dir}/eggs
download-cache=${buildout:directory}/downloads

eggs =
    Django    
    django-tinymce
    django-pygments
    django-extensions
    django-widget-tweaks
    PIL
    markdown
    django-taggit
    sorl-thumbnail
    South

develop = 
    apps/django-tagging
    apps/django-flatpages-plus
    apps/jqfileuploader
    apps/jquery-js
    apps/modernizr-js
    apps/layouts
    apps/flatpage_views

extra-paths =
    ${buildout:develop}
    ${buildout:directory}/${config:DJ_PROJECT}
    ${buildout:directory}

versions = versions
unzip = true
newest = false

[config]
DJ_PROJECT = cms

[sources]
django-tagging = git git://github.com/brosner/django-tagging.git
django-flatpages-plus = git git@github.com:shaijudavis/django-flatpages-plus.git
jquery-js = hg https://bitbucket.org/fanstatic/js.jquery/commits/tag/1.9.1
modernizr-js = hg https://bitbucket.org/fanstatic/js.modernizr/commits/tag/2.5.3.1
# these URLs works ONLY if developer has GitHub login (or, GH colloaborator !!)
jqfileuploader = git git@github.com:shaijudavis/Django-jQuery-File-Uploader-Integration-demo.git
layouts = git git@github.com:shaijudavis/project_layouts.git
flatpage_views = git git@github.com:shaijudavis/flatpage-views.git

[manage.py]
recipe = djangorecipe
project = ${config:DJ_PROJECT}
settings = production
eggs = ${buildout:eggs}
pythonpath = ${buildout:directory}/${config:DJ_PROJECT}
extra-paths = ${buildout:extra-paths}
wsgi = true

[twitter-bootstrap]
recipe = hexagonit.recipe.download
url = http://twitter.github.com/bootstrap/assets/bootstrap.zip
#destination = ${buildout:parts-directory}/twitter-bootstrap
md5sum = 99a94c7ced6527822470f9d9f5a58681
strip-top-level-dir = true
hash-name = false

[js-fworks-setup]
recipe = cp.recipe.cmd
on_update = True
# let's use the "minimized" versions, of everything... What about caching?
install_cmd =
    cd ${buildout:directory}/apps/jquery-js/js/jquery/resources
    mv jquery.js jquery-full.js
    ln -s jquery-min.js jquery.js
    #
    cd ${buildout:directory}/apps/modernizr-js/js/modernizr/resources
    mv modernizr.js modernizr-full.js
    ln -s modernizr-min.js modernizr.js
    #
    cd ${buildout:parts-directory}/twitter-bootstrap/css
    mv bootstrap.css bootstrap-full.css
    ln -s bootstrap-min.css bootstrap.css
    mv bootstrap-responsive.css bootstrap-responsive-full.css
    ln -s bootstrap-responsive-min.css bootstrap-responsive.css
    #
    cd ${buildout:parts-directory}/twitter-bootstrap/js
    mv bootstrap.js bootstrap-full.js
    ln -s bootstrap-min.js bootstrap.js
    #
    touch ${buildout:parts-directory}/js-fworks-setup
update_cmd =
    if [ ! -f ${buildout:parts-directory}/js-fworks-setup ]; then
    ${js-fworks-setup:install_cmd}
    fi

js_jquery = ${buildout:directory}/apps/jquery-js/js/jquery/resources
js_modernizr = ${buildout:directory}/apps/modernizr-js/js/modernizr/resources
twit_bootstrap = ${twitter-bootstrap:location}

[sphinx]
recipe = zc.recipe.egg
eggs =
    ${buildout:eggs}
    lxml
    Sphinx
    pygments
scripts =
    sphinx-build

[tools]
# https://github.com/danfairs/fez.djangoskel
recipe = zc.recipe.egg
eggs =
    bpython
    PasteScript
    fez.djangoskel
    ${buildout:eggs}
initialization =
    import sys, os
    os.environ["DJANGO_SETTINGS_MODULE"] = "${config:DJ_PROJECT}.production"
extra-paths =
    ${buildout:extra-paths}
scripts =
    bpython
    django-admin.py
    paster
entry-points =
    django-admin.py=django.core.management:execute_from_command_line
#    bolt=bolt.main:main

[mkdirs]
recipe = z3c.recipe.mkdir
paths =
    ${buildout:directory}/var/etc
    ${buildout:directory}/var/log
    ${buildout:directory}/var/www/media
    ${buildout:directory}/var/www/static
    ${buildout:directory}/var/mediagenerator
    ${buildout:directory}/var/cache

[dj-tagging-patch]
recipe = cp.recipe.cmd
on_update = False
install_cmd =
    cd apps
    patch -p1 -b -d django-tagging < dj-tagging.patch 
update_cmd =

[HOW-TO-BUILD-THIS]
commands =
    cd ${buildout:directory}
    python2.7 virtualenv.py .
    bin/python2.7 bootstrap.py
    # are in 'development', so pull in all Development eggs, parts...
    script -c "bin/buildout -c testing.cfg" build.N.log

first_time =
    # ONLY once!  South required...
    script -a -c "bin/manage.py syncdb" db.0.log
    script -a -c "bin/manage.py migrate" db.0.log
#
#  NEXT: Salt deployment recipes to go beyond...

# To debug tracebacks "under manage":
debugging_imports_etc =
    # to get a Py traceback...!
    bin/manage.py shell --traceback
