[buildout]
# FOR development: to get a "testing" version of 'cfl_mobile'
#   script -c "bin/buildout -Nc testing.cfg" test.log
extends =
    buildout.cfg

parts +=
    flatten-eggs
    runtests

# https://github.com/jbalogh/django-nose#readme
# https://github.com/rbarrois/factory_boy
# http://testutils.org/sst/
eggs +=
    pysqlite
    django-debug_toolbar
    django-nose
    rednose
    nose-cov
    mock
    factory_boy
    sst
# Add, later?
# http://webtest.readthedocs.org/en/latest/
#   webtest
#   django-webtest
# https://github.com/gabrielfalcao/lettuce#readme
#    lettuce

[manage.py]
# overrides, for "development"
settings = development

[deployment]
# overrides, for "development"
initialization =
    import sys, os
    os.environ["DJANGO_SETTINGS_MODULE"] = "${config:DJ_PROJECT}.development"

[flatten-eggs]
recipe = collective.recipe.omelette
eggs = ${buildout:eggs}
location = ${buildout:directory}/flattened-eggs

[testenv]
DJANGO_SETTINGS_MODULE = ${config:DJ_PROJECT}.development

[runtests]
recipe = pbp.recipe.noserunner
eggs = ${buildout:eggs}
extra-paths = ${buildout:develop}
defaults =
# --rednose    
environment = testenv


[HOW-TO]
commands =
    cd ${buildout:directory}
    python2.7 virtualenv.py .
    bin/python2.7 bootstrap.py
    # are in 'development', so pull in all Development eggs, parts...
    script -c "bin/buildout -c testing.cfg" build.N.log

first_time =
    # ONLY once!  South required...
    script -a -c "bin/manage.py syncdb" db.0.log
    script -a -c "bin/manage.py migrate" db.0.log
#
#  NEXT: Fabric/Bolt "script", to do (even more than) what
#    "cfl_mobile/ops/cluster/REQs/packages/*.sh" scripts, do

# To debug tracebacks "under manage":
debugging_imports_etc =
    # get a traceback!!
    bin/manage.py shell --traceback
